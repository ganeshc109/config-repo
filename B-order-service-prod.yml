spring:
  application:
    name: B-ORDER-SERVICE
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:mysql://localhost:3306/ordersdb_prod
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate.jdbc.time_zone: Asia/Kolkata
      hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
  kafka:
    bootstrap-servers: localhost:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  cache:
    type: redis
  redis:
    host: localhost         # Redis host (docker-compose service name if using docker)
    port: 6379
    lettuce:
      shutdown-timeout: 100ms
    timeout: 60000ms

server:
  port: 8053
  error:
    include-message: always
    include-binding-errors: always
  message: "Hello from User Service Config - Prod Profile (MySQL)"

eureka:
  instance:
    metadata-map:
      profile: prod

management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      userService:
        register-health-indicator: true
        sliding-window-size: 10          # Number of calls to evaluate
        minimum-number-of-calls: 5
        failure-rate-threshold: 50       # % of failed calls before CB opens
        wait-duration-in-open-state: 10s # How long CB stays open before retrying
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
  retry:
    instances:
      userService:
        max-attempts: 3
        wait-duration: 500ms

logging:
  level:
    root: INFO
    com.example.demo: DEBUG   # enable detailed logs for your app
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG             # show SQL queries
    org.hibernate.type.descriptor.sql: TRACE  # show SQL parameters
